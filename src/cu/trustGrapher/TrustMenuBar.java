////////////////////////////////TrustMenuBar//////////////////////////////////
package cu.trustGrapher;

import aohara.utilities.*;
import cu.trustGrapher.eventplayer.*;
/**
 * The menu bar for the simnulator.  Contains controls for options, saving, loading,
 * modifying events, changing view types, and displaying panels.
 * @author Andrew O'Hara
 */
public class TrustMenuBar extends javax.swing.JFrame {

    public static final String SHOW_PLAYBACK_PANEL = "showPlaybackPanel", SHOW_EVENT_PANEL = "showEventPanel";
    private TrustGrapher trustGrapher;

//////////////////////////////////Constructor///////////////////////////////////
    public TrustMenuBar(TrustGrapher trustGrapher) {
        this.trustGrapher = trustGrapher;
        initComponents();

        //Sets the status of the display buttons based on the properties file
        PropertyManager config = trustGrapher.getPropertyManager();
        if (config.containsKey(SHOW_PLAYBACK_PANEL)) {
            togglePlaybackPanelButton.setSelected(Boolean.parseBoolean(config.getProperty(SHOW_PLAYBACK_PANEL)));
        } else {
            togglePlaybackPanelButton.setSelected(true);
        }
        if (config.containsKey(SHOW_EVENT_PANEL)) {
            toggleEventPanelButton.setSelected(Boolean.parseBoolean(config.getProperty(SHOW_EVENT_PANEL)));
        } else {
            toggleEventPanelButton.setSelected(true);
        }
        //Set the status of the view type buttons based on the properties file
        if (trustGrapher.getViewType() == TrustGrapher.GRID){
            gridViewButton.setSelected(true);
        }else{
            tabbedViewButton.setSelected(true);
        }
    }
    
/////////////////////////////////GUI Components/////////////////////////////////
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewButtonGroup = new javax.swing.ButtonGroup();
        javax.swing.JMenuBar jMenuBar1 = new javax.swing.JMenuBar();
        javax.swing.JMenu jMenu1 = new javax.swing.JMenu();
        javax.swing.JMenuItem loadButton = new javax.swing.JMenuItem();
        javax.swing.JMenuItem saveLogButton = new javax.swing.JMenuItem();
        javax.swing.JMenuItem exportButton = new javax.swing.JMenuItem();
        javax.swing.JMenuItem exitButton = new javax.swing.JMenuItem();
        javax.swing.JMenu jMenu2 = new javax.swing.JMenu();
        javax.swing.JMenuItem insertEventButton = new javax.swing.JMenuItem();
        javax.swing.JMenuItem modifyeventButton = new javax.swing.JMenuItem();
        javax.swing.JMenuItem removeEventButton = new javax.swing.JMenuItem();
        javax.swing.JPopupMenu.Separator jSeparator1 = new javax.swing.JPopupMenu.Separator();
        javax.swing.JMenuItem optionsButton = new javax.swing.JMenuItem();
        javax.swing.JMenu jMenu3 = new javax.swing.JMenu();
        tabbedViewButton = new javax.swing.JRadioButtonMenuItem();
        gridViewButton = new javax.swing.JRadioButtonMenuItem();
        togglePlaybackPanelButton = new javax.swing.JCheckBoxMenuItem();
        toggleEventPanelButton = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setEnabled(false);
        setFocusable(false);
        setFocusableWindowState(false);
        setResizable(false);
        setUndecorated(true);

        jMenu1.setText("File");

        loadButton.setText("Load Algorithms");
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });
        jMenu1.add(loadButton);

        saveLogButton.setText("Save Log File");
        saveLogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveLogButtonActionPerformed(evt);
            }
        });
        jMenu1.add(saveLogButton);

        exportButton.setText("Export Results");
        exportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });
        jMenu1.add(exportButton);

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        jMenu1.add(exitButton);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        insertEventButton.setText("Insert Event After");
        insertEventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertEventButtonActionPerformed(evt);
            }
        });
        jMenu2.add(insertEventButton);

        modifyeventButton.setText("Modify Event");
        modifyeventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyeventButtonActionPerformed(evt);
            }
        });
        jMenu2.add(modifyeventButton);

        removeEventButton.setText("Remove Event");
        removeEventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeEventButtonActionPerformed(evt);
            }
        });
        jMenu2.add(removeEventButton);
        jMenu2.add(jSeparator1);

        optionsButton.setText("Options");
        optionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionsButtonActionPerformed(evt);
            }
        });
        jMenu2.add(optionsButton);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("View");

        viewButtonGroup.add(tabbedViewButton);
        tabbedViewButton.setSelected(true);
        tabbedViewButton.setText("Tabbed View");
        tabbedViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tabbedViewButtonActionPerformed(evt);
            }
        });
        jMenu3.add(tabbedViewButton);

        viewButtonGroup.add(gridViewButton);
        gridViewButton.setText("Grid View");
        gridViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridViewButtonActionPerformed(evt);
            }
        });
        jMenu3.add(gridViewButton);

        togglePlaybackPanelButton.setSelected(true);
        togglePlaybackPanelButton.setText("Display Playback Panel");
        togglePlaybackPanelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                togglePlaybackPanelButtonActionPerformed(evt);
            }
        });
        jMenu3.add(togglePlaybackPanelButton);

        toggleEventPanelButton.setSelected(true);
        toggleEventPanelButton.setText("Display Event Panel");
        toggleEventPanelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleEventPanelButtonActionPerformed(evt);
            }
        });
        jMenu3.add(toggleEventPanelButton);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 225, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        PlaybackPanel playbackPanel = (trustGrapher.graphsLoaded()) ? trustGrapher.getEventPlayer().getPlaybackPanel() : null;
        if (playbackPanel != null) {
            playbackPanel.getPauseButton().doClick();
        }
        trustGrapher.startAlgorithmLoader();
    }//GEN-LAST:event_loadButtonActionPerformed

    private void saveLogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveLogButtonActionPerformed
        if (trustGrapher.graphsLoaded()) {
            LogGen.saveEventLog(trustGrapher.getEventPlayer().getEvents());
        }
    }//GEN-LAST:event_saveLogButtonActionPerformed

    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonActionPerformed
        //Implement export results
        if (trustGrapher.graphsLoaded()){
            ChatterBox.alert("Export results.  To implement this, go to " + this.getClass().getName() + ",\nthen search 'Implement export results'.");
        }
    }//GEN-LAST:event_exportButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        PlaybackPanel playbackPanel = (trustGrapher.graphsLoaded()) ? trustGrapher.getEventPlayer().getPlaybackPanel() : null;
        if (playbackPanel != null) {
            playbackPanel.getPauseButton().doClick();
        }
        if (ChatterBox.yesNoDialog("Are you sure you want to exit?")) {
            System.exit(0);
        }
    }//GEN-LAST:event_exitButtonActionPerformed

    private void insertEventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertEventButtonActionPerformed
        EventInjector.getNewEvent(trustGrapher.getEventPlayer());
    }//GEN-LAST:event_insertEventButtonActionPerformed

    private void modifyeventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyeventButtonActionPerformed
        EventInjector.modifyEvent(trustGrapher.getEventPlayer());
    }//GEN-LAST:event_modifyeventButtonActionPerformed

    private void removeEventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeEventButtonActionPerformed
        trustGrapher.getEventPlayer().removeEvent();
    }//GEN-LAST:event_removeEventButtonActionPerformed

    private void optionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionsButtonActionPerformed
        if (trustGrapher.graphsLoaded()){
            trustGrapher.getEventPlayer().pause();
        }
        OptionsWindow.run(trustGrapher);
    }//GEN-LAST:event_optionsButtonActionPerformed

    private void tabbedViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabbedViewButtonActionPerformed
        PropertyManager config = trustGrapher.getPropertyManager();
        EventPlayer eventThread = trustGrapher.getEventPlayer();
        config.setProperty("viewType", "" + TrustGrapher.TABBED);
        config.save();
        if (trustGrapher.graphsLoaded()) {
            eventThread.goToEvent(0);
            trustGrapher.startGraph(trustGrapher.getEventPlayer().getEvents());
        }
    }//GEN-LAST:event_tabbedViewButtonActionPerformed

    private void gridViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridViewButtonActionPerformed
        PropertyManager config = trustGrapher.getPropertyManager();
        EventPlayer eventThread = trustGrapher.getEventPlayer();
        config.setProperty("viewType", "" + TrustGrapher.GRID);
        config.save();
        if (trustGrapher.graphsLoaded()) {
            eventThread.goToEvent(0);
            trustGrapher.startGraph(eventThread.getEvents());
        }
    }//GEN-LAST:event_gridViewButtonActionPerformed

    private void togglePlaybackPanelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_togglePlaybackPanelButtonActionPerformed
        PropertyManager config = trustGrapher.getPropertyManager();
        EventPlayer eventThread = trustGrapher.getEventPlayer();
        config.setProperty(SHOW_PLAYBACK_PANEL, "" + togglePlaybackPanelButton.isSelected());
        config.save();
        if (trustGrapher.graphsLoaded()) { //If events have been loaded
            eventThread.getPlaybackPanel().setVisible(togglePlaybackPanelButton.isSelected());
            //If you pack when the panel is not visible, it will leave an empty space for the panel
            if (togglePlaybackPanelButton.isSelected()) {
                trustGrapher.pack();
                trustGrapher.validate();
            }
        }
    }//GEN-LAST:event_togglePlaybackPanelButtonActionPerformed

    private void toggleEventPanelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleEventPanelButtonActionPerformed
        PropertyManager config = trustGrapher.getPropertyManager();
        EventPlayer eventThread = trustGrapher.getEventPlayer();
        config.setProperty(SHOW_EVENT_PANEL, "" + toggleEventPanelButton.isSelected());
        config.save();
        if (trustGrapher.graphsLoaded()) { //If events have been loaded
            eventThread.getLogPanel().setVisible(toggleEventPanelButton.isSelected());
            //If you pack when the panel is not visible, it will leave an empty space for the panel
            if (toggleEventPanelButton.isSelected()) {
                trustGrapher.pack();
                trustGrapher.validate();
            }
        }
    }//GEN-LAST:event_toggleEventPanelButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButtonMenuItem gridViewButton;
    private javax.swing.JRadioButtonMenuItem tabbedViewButton;
    public javax.swing.JCheckBoxMenuItem toggleEventPanelButton;
    public javax.swing.JCheckBoxMenuItem togglePlaybackPanelButton;
    private javax.swing.ButtonGroup viewButtonGroup;
    // End of variables declaration//GEN-END:variables
}
////////////////////////////////////////////////////////////////////////////////

